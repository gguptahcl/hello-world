<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.springframework</groupId>
    <artifactId>hello-world-docker</artifactId>
    <version>0.1.0</version>
    <packaging>jar</packaging>
    <name>Hello World -- Docker</name>
    <description>Hello World with Spring Boot and Docker</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.3.RELEASE</version>
        <relativePath />
    </parent>

 <!--   <properties>
        <docker.image.prefix>ggupta0109</docker.image.prefix>
        <java.version>1.8</java.version>
    </properties>
 -->	
 
 	<properties>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<jacoco-maven-plugin.version>0.8.4</jacoco-maven-plugin.version>
		<jacoco.utReportFolder>${project.basedir}/target/jacoco/test</jacoco.utReportFolder>
		<sonar.coverage.jacoco.xmlReportPaths>${jacoco.utReportFolder}/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
		<jacoco.utReportFile>${jacoco.utReportFolder}/report/jacoco.xml</jacoco.utReportFile>

		<project.testresult.directory>${project.build.directory}/test-results</project.testresult.directory>
		<sonar-maven-plugin.version>3.6.1.1688</sonar-maven-plugin.version>
		<junit.utReportFolder>${project.testresult.directory}/test</junit.utReportFolder>
		<maven-surefire-plugin.version>3.0.0-M3</maven-surefire-plugin.version>
		<argLine>-Djava.security.egd=file:/dev/./urandom -Xmx256m</argLine>
		<lifecycle-mapping.version>1.0.0</lifecycle-mapping.version>
	</properties>
 
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- tag::plugin[] -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>1.3.6</version>
                <configuration>
                    <!--<repository>${docker.image.prefix}/${project.artifactId}</repository>-->
			<repository>${project.artifactId}</repository>
                    <buildArgs>
                        <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
                    </buildArgs>
                </configuration>
		<executions>
			<execution>
				<id>default</id>
				<phase>install</phase>
				<goals>
					<goal>build</goal>
					<!--<goal>push</goal>-->
				</goals>
			</execution>
		</executions>
            </plugin>
            <!-- end::plugin[] -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>${project.artifactId}</artifactId>
                                    <version>${project.version}</version>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


	<plugin>
	    <groupId>org.apache.maven.plugins</groupId>
   		 <artifactId>maven-surefire-plugin</artifactId>
    		<version>2.22.1</version>
    <configuration>
        <useSystemClassLoader>false</useSystemClassLoader>
    </configuration>
</plugin>

<!--  added for JACOCO Start -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<configuration>
					<excludes>
						<exclude>com/abc/batchIntegration/vo/*</exclude>
						<exclude>com/abc/batchIntegration/domain/**</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>pre-unit-tests</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${jacoco.utReportFile}</destFile>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for unit tests is created
                        after unit tests have been run -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${jacoco.utReportFile}</dataFile>
							<outputEncoding>UTF-8</outputEncoding>
							<outputDirectory>${jacoco.utReportFolder}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

<!--  added for JACOCO end -->




        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
       <!-- <dependency>
                <groupId>javax.activation</groupId>
                <artifactId>activation</artifactId>
                <version>1.1.1</version>
       </dependency>-->
    </dependencies>
</project>
